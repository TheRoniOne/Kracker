services:
  db:
    image: "postgres:17-alpine"
    ports:
      - "5432:5432"
    env_file:
      - .env.db
    volumes:
      - kracker_db_data:/var/lib/postgresql/data
    logging:
      driver: "local"
      options:
        max-size: "10m"
    networks:
      - kracker

  traefik:
    image: traefik:v3.2
    ports:
      - target: 80
        published: 80
        protocol: tcp
        mode: ingress
      - target: 443
        published: 443
        protocol: tcp
        mode: ingress
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik/dynamic.yml:/etc/traefik/dynamic.yml:ro
    logging:
      driver: "local"
      options:
        max-size: "10m"
    networks:
      - kracker
    secrets:
      - traefik_users
    command:
      - "--log.level=INFO"
      - "--log.format=json"
      - "--accesslog=true"
      - "--accesslog.format=json"
      - "--accesslog.fields.defaultmode=keep"
      - "--providers.file.filename=/etc/traefik/dynamic.yml"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entryPoints.web.address=:80"
      - "--entryPoints.websecured.address=:443"
      - "--entryPoints.web.http.redirections.entrypoint.to=websecure"
      - "--entryPoints.web.http.redirections.entrypoint.scheme=https"
      - "--certificatesresolvers.letsencrypt.acme.email=${SSL_EMAIL}"
      - "--certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json"
      - "--certificatesresolvers.letsencrypt.acme.dnschallenge.provider=cloudflare"
      - "--certificatesresolvers.letsencrypt.acme.dnschallenge.delaybeforecheck=0"
      - "--certificatesresolvers.letsencrypt.acme.dnschallenge.resolvers=1.1.1.1:53,8.8.8.8:53"
      - "--api=true"
    labels:
      - "traefik.enable=true"

      - "traefik.http.routers.dashboard.entrypoints=web, websecured"
      - "traefik.http.routers.dashboard.rule=Host(`kracker.traefik.${DOMAIN}`)"
      - "traefik.http.routers.dashboard.service=api@internal"

      - "traefik.http.routers.dashboard.tls=true"
      - "traefik.http.routers.dashboard.middlewares=auth"
      - "traefik.http.middlewares.auth.basicauth.usersfile=/run/secrets/traefik_users"

  backend:
    image: kracker-backend:${KRACKER_VERSION}
    env_file:
      - /usr/kracker/.env.backend
    logging:
      driver: "local"
      options:
        max-size: "10m"
    networks:
      - kracker
    labels:
      - "traefik.enable=true"

      - "traefik.http.services.kracker-backend-service.loadbalancer.server.port=1323"

      - "traefik.http.routers.kracker-backend.entrypoints=web, websecured"
      - "traefik.http.routers.kracker-backend.tls=true"
      - "traefik.http.routers.kracker-backend.rule=Host(`kracker.${DOMAIN}`) && PathPrefix(`/back`)"
      - "traefik.http.routers.kracker-backend.service=kracker-backend-service"

      - "traefik.http.middlewares.kracker-dynamic-headers.headers.accesscontrolalloworiginlist=http://${DOMAIN}"
      - "traefik.http.middlewares.kracker-dynamic-headers.headers.sslHost=${DOMAIN}"

      - "traefik.http.routers.kracker-backend.middlewares=kracker-security-headers@file, kracker-backend-strip-prefix@file, kracker-dynamic-headers"

  frontend:
    image: kracker-frontend:${KRACKER_VERSION}
    env_file:
      - /usr/kracker/.env.frontend
    logging:
      driver: "local"
      options:
        max-size: "10m"
    networks:
      - kracker
    labels:
      - "traefik.enable=true"

      - "traefik.http.services.kracker-frontend-service.loadbalancer.server.port=3000"

      - "traefik.http.routers.kracker-frontend.entrypoints=web, websecured"
      - "traefik.http.routers.kracker-frontend.tls=true"
      - "traefik.http.routers.kracker-frontend.rule=Host(`kracker.${DOMAIN}`) && (!PathPrefix(`/back`))"
      - "traefik.http.routers.kracker-frontend.service=kracker-frontend-service"

      - "traefik.http.routers.kracker-frontend.middlewares=kracker-security-headers@file, kracker-frontend-security-headers@file, kracker-dynamic-headers"

secrets:
  db_password:
    file: ./db_password
  traefik_users:
    file: ./traefik_users

networks:
  kracker:
    driver: bridge

volumes:
  kracker_db_data:
